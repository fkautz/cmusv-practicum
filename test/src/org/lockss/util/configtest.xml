<!--
  This file is used by TestXmlPropertyLoader - do not change one
  without changing the other.
-->
<lockss-config>
  <property name="a" value="foo"/>
  <property name="b">
    <property name="c" value="foo"/>
  </property>

  <!-- For testing purposes, override version information -->
  <property name="org.lockss.daemon.version" value="1.2.8" />
  <property name="org.lockss.platform.version" value="135" />
  <property name="org.lockss.platform.group" value="beta" />
  <property name="org.lockss.platform.hostname" value="testhost" />

  <property name="org.lockss">
    <property name="d">
      <list>
	<value>1</value>
	<value>2</value>
	<value>3</value>
	<value>4</value>
	<value>5</value>
      </list>
    </property>

    <!-- Test for character chunking problems with list values -->
    <property name="listtest">
      <list>
	<value>this&amp;should&amp;be&amp;one&amp;value</value>
      </list>
    </property>

    <!-- Test equivalence of Daemon Version... -->
    <if daemonVersion="1.2.7">
      <property name="test.a" value="foo"/>
    </if>
    <if daemonVersion="1.2.8">
      <property name="test.b" value="foo"/>
    </if>

    <!-- Test max Daemon Version -->
    <if daemonVersionMax="1.2.7">
      <property name="test.c" value="foo"/>
    </if>
    <if daemonVersionMax="1.2.9">
      <property name="test.d" value="foo"/>
    </if>

    <!-- Test min Daemon Version -->
    <if daemonVersionMin="1.2.7">
      <property name="test.e" value="foo"/>
    </if>
    <if daemonVersionMin="1.2.9">
      <property name="test.f" value="foo"/>
    </if>

    <!-- Test max and min daemon Version -->
    <if daemonVersionMin="1.2.7" daemonVersionMax="1.2.9">
      <property name="test.g" value="foo"/>
    </if>
    <if daemonVersionMin="1.2.0" daemonVersionMax="1.2.7">
      <property name="test.h" value="foo"/>
    </if>

    <!-- Test equivalence of Platform Version... -->
    <if platformVersion="135">
      <property name="test.i" value="foo"/>
    </if>
    <if platformVersion="136">
      <property name="test.j" value="foo"/>
    </if>

    <!-- Test max Platform Version -->
    <if platformVersionMax="134">
      <property name="test.k" value="foo"/>
    </if>
    <if platformVersionMax="136">
      <property name="test.l" value="foo"/>
    </if>

    <!-- Test min Platform Version -->
    <if platformVersionMin="134">
      <property name="test.m" value="foo"/>
    </if>
    <if platformVersionMin="136">
      <property name="test.n" value="foo"/>
    </if>

    <!-- Test max and min Platform Version -->
    <if platformVersionMin="134" platformVersionMax="136">
      <property name="test.o" value="foo"/>
    </if>
    <if platformVersionMin="130" platformVersionMax="134">
      <property name="test.p" value="foo"/>
    </if>

    <!-- Test group -->
    <if group="beta">
      <property name="test.q" value="foo"/>
    </if>
    <if group="dev">
      <property name="test.r" value="foo"/>
    </if>

    <!-- Test hostname -->
    <if hostname="testhost">
      <property name="test.s" value="foo"/>
    </if>
    <if hostname="badhost">
      <property name="test.t" value="foo"/>
    </if>

    <!-- Test then/else -->
    <if group="beta">
      <then>
	<property name="test.u" value="foo"/>
      </then>
      <else>
	<property name="test.u" value="bar"/>
      </else>
    </if>
    <if group="dev">
      <then>
	<property name="test.v" value="foo"/>
      </then>
      <else>
	<property name="test.v" value="bar"/>
      </else>
    </if>

    <!-- Test a combination of conditionals -->
    <if platformVersion="134" group="beta">
      <then>
	<property name="test.w" value="foo"/>
      </then>
      <else>
	<property name="test.w" value="bar"/>
      </else>
    </if>
    <if platformVersion="135" group="beta">
      <then>
	<property name="test.x" value="foo"/>
      </then>
      <else>
	<property name="test.x" value="bar"/>
      </else>
    </if>
    
    
    <!-- Test the legal formats for "and" booleans -->
    <if>
      <and>
	<test group="beta" />
	<test hostname="testhost" />
      </and>
      <property name="and.a" value="foo" />
    </if>
    <if>
      <and>
	<test group="beta" />
	<test hostname="bar" />
      </and>
      <property name="and.b" value="foo" />
    </if>
    <if>
      <and>
	<test group="beta" />
	<test hostname="testhost" />
      </and>
      <then>
	<property name="and.c" value="foo" />
      </then>
    </if>
    <if>
      <and>
	<test group="beta" />
	<test hostname="foo" />
      </and>
      <then>
	<property name="and.d" value="foo" />
      </then>
    </if>
    <if>
      <and>
	<test group="beta" />
	<test hostname="foo" />
      </and>
      <then>
	<property name="and.e" value="foo" />
      </then>
      <else>
	<property name="and.e" value="bar" />
      </else>
    </if>

  
    <!-- Test the legal formats for "or" booleans -->
    <if>
      <or>
	<test group="beta" />
	<test group="foo" />
      </or>
      <property name="or.a" value="foo"/>
    </if>
    <if>
      <or>
	<test group="foo" />
	<test group="bar" />
      </or>
      <property name="or.b" value="foo"/>
    </if>
    <if>
      <or>
	<test group="beta" />
	<test group="foo" />
      </or>
      <then>
	<property name="or.c" value="foo"/>
      </then>
    </if>
    <if>
      <or>
	<test group="foo" />
	<test group="bar" />
      </or>
      <then>
	<property name="or.d" value="foo"/>
      </then>
    </if>
    <if>
      <or>
	<test group="foo" />
	<test group="bar" />
      </or>
      <then>
	<property name="or.e" value="foo"/>
      </then>
      <else>
	<property name="or.e" value="bar"/>
      </else>
    </if>

    <!-- Test the legal formats for "not" booleans -->
    <if>
      <not>
	<test group="foo" />
      </not>
      <property name="not.a" value="foo"/>
    </if>
    <if>
      <not>
	<test group="beta" />
      </not>
      <property name="not.b" value="foo"/>
    </if>
    <if>
      <not>
	<test group="foo" />
      </not>
      <then>
	<property name="not.c" value="foo"/>
      </then>
    </if>
    <if>
      <not>
	<test group="beta" />
      </not>
      <then>
	<property name="not.d" value="foo"/>
      </then>
    </if>
    <if>
      <not>
	<test group="beta" />
      </not>
      <then>
	<property name="not.e" value="foo"/>
      </then>
      <else>
	<property name="not.e" value="bar"/>
      </else>
    </if>
    <if>
      <not>
        <test group="foo" />
        <test group="bar" />
      </not>
      <then>
	<property name="not.f" value="foo"/>
      </then>
      <else>
	<property name="not.f" value="bar"/>
      </else>
    </if>
    <if>
      <not>
	<test group="foo" />
	<test group="beta" />
	<test group="bar" />
      </not>
      <then>
	<property name="not.g" value="foo"/>
      </then>
      <else>
	<property name="not.g" value="bar"/>
      </else>
    </if>

    <!-- Test nested booleans -->
    <!-- Expected values at each level are in the comments. -->
    <if>
      <and>
	<not>
	  <and>
	    <test hostname="testhost" /> <!-- true -->
	    <test daemonVersion="1.5.0" /> <!-- false -->
	  </and> <!-- false -->
	</not> <!-- true -->
	<or>
	  <test group="foo" /> <!-- false -->
	  <test group="bar" /> <!-- false -->
	  <test group="beta" /> <!-- true -->
	</or> <!-- true -->
      </and> <!-- true -->
      <then>
	<property name="nested.a" value="foo" />
      </then>
      <else>
	<property name="nested.a" value="bar" />
      </else>
    </if>

    <if>
      <or>
	<not>
	  <test hostname="testhost" /> <!-- true -->
	</not> <!-- false -->
	<or>
	  <test hostname="bar" /> <!-- false -->
	  <test hostname="foo" /> <!-- false -->
	</or> <!-- false -->
	<and>
	  <test daemonVersionMin="1.0.0" daemonVersionMax="2.0.0" /> <!-- true -->
	  <test platformVersionMin="100" platformVersionMax="130" /> <!-- false -->
	</and> <!-- false -->
      </or><!-- false -->
      <then>
	<property name="nested.b" value="foo" />
      </then>
      <else>
	<property name="nested.b" value="bar" />
      </else>
    </if>
  </property>

</lockss-config>
