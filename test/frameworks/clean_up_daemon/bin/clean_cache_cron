#!/bin/sh

# $Id: clean_cache_cron,v 1.2 2011/04/26 20:56:16 thib_gc Exp $

# Copyright (c) 2011 Board of Trustees of Leland Stanford Jr. University,
# all rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# STANFORD UNIVERSITY BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Except as contained in this notice, the name of Stanford University shall not
# be used in advertising or otherwise to promote the sale, use or other dealings
# in this Software without prior written authorization from Stanford University.

# THIS SCRIPT IS EXPERIMENTAL AND ASSUMES A PARTICULAR, UNDOCUMENTED
# SYSTEM LAYOUT (DIRECTORY STRUCTURES, USERS AND GROUPS, CONFIGURATION
# PARAMETERS, ETC.).

LOCKSS_ROOT=/etc/lockss
LOCKSS_CONFIG=$LOCKSS_ROOT/config.dat
LOCKSS_CHECKOUT=$LOCKSS_ROOT/lockss-daemon
LOCKSS_CLEANUPCACHE=$LOCKSS_CHECKOUT/test/frameworks/clean_up_daemon/bin/clean_cache
LOCKSS_DELETED=deleted
LOCKSS_DAYS=4
# LOCKSS_DAYS=4 means strictly older than 4 full days, meaning 5 days or older (artifact of find)

if [ ! -d "${LOCKSS_ROOT}" ]; then
  echo "${LOCKSS_ROOT} not found"
  exit 1
fi
if [ ! -r "${LOCKSS_CONFIG}" ]; then
  echo "${LOCKSS_CONFIG} not found or not readable"
  exit 1
fi
if [ ! -x "${LOCKSS_CLEANUPCACHE}" ]; then
  echo "${LOCKSS_CLEANUPCACHE} not found or not executable"
  exit 1
fi

. $LOCKSS_CONFIG
if [ "X${LOCKSS_USER}" = "X" ]; then
  echo "${LOCKSS_CONFIG} does not set LOCKSS_USER"
  exit 1
fi

for U in $LOCKSS_USER ; do
  (
    F="${LOCKSS_ROOT}/config.${U}.dat"
    if [ -r $F ]; then
      . $F
    elif [ "X${U}" != "Xlockss" ]; then
      echo "${F} not found or not readable"
      exit 1
    else
      F=$LOCKSS_CONFIG
    fi
    if [ "X${LOCKSS_UI_PORT}" = "X" ]; then
      echo "${F} does not set LOCKSS_UI_PORT"
      exit 1
    fi
    # Assumption: LOCKSS_DISK_PATHS is a single directory
    if [ "X${LOCKSS_DISK_PATHS}" = "X" ]; then
      echo "${F} does not set LOCKSS_DISK_PATHS"
      exit 1
    fi
    if [ ! -d "${LOCKSS_DISK_PATHS}" ]; then
      echo "${F}: ${LOCKSS_DISK_PATHS} not found"
      exit 1
    fi
    export LOCKSS_CLEANUPCACHE
    export LOCKSS_DAYS
    export LOCKSS_DELETED
    export LOCKSS_DISK_PATHS
    export LOCKSS_UI_PORT
    su $U -- -c '
      umask 002
      cd $LOCKSS_DISK_PATHS
      DEST=`mktemp -d -p $LOCKSS_DELETED XXXXXXXX`
      chmod g+u $DEST
      # Change the following from content to $LOCKSS_USER later
      chgrp content $DEST
      touch "${DEST}/#deletion_timestamp"
      # May require an update later
      $LOCKSS_CLEANUPCACHE --user="lockss-u" --password="lockss-p" --dest="${DEST}"
      for D in `find $LOCKSS_DELETED -mindepth 2 -maxdepth 2 -type f -name "#deletion_timestamp" -mtime +$LOCKSS_DAYS`; do
        nice rm -rf `dirname $D`
      done
    '
  )
done

