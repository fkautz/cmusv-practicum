#!/bin/sh
# Do not edit the line above. The functions must work with
# /bin/sh on Solaris.

# Common functions for lockss startup scripts

set_lockss_user () {
    if [ "X${1}" != X ]; then
        case `uname -s` in
        Linux)
            HOME_DIR=`echo "cd ~$1 ; pwd" | sh`
            ;;
        SunOS)
            HOME_DIR=`echo "cd ~$1 ; pwd" | /usr/bin/bash`
            ;;
        esac
        if [ "X${HOME_DIR}" = X ] ; then
            echo "No home dir for $1"
            exit 1
        fi
    fi
    if [ "X${LOCKSS_HOME}" != "X" -a -f ${LOCKSS_HOME}/etc/lockss/config.dat ]
    then
        CFG_FILE=${LOCKSS_HOME}/etc/lockss/config.dat
    elif [ -f ${HOME_DIR}/etc/lockss/config.dat ]
    then
        CFG_FILE=${HOME_DIR}/etc/lockss/config.dat
    elif [ -f /etc/lockss/config.dat ]
    then
        CFG_FILE=/etc/lockss/config.dat
    else
        CFG_FILE=
    fi
    export CFG_FILE
    if [ "${LOCKSS_USER}X" = "X" -a "X${CFG_FILE}" != "X" ]
    then
        LOCKSS_USER=`sed -n '/^LOCKSS_USER="\(.*\)"/s//\1/p' ${CFG_FILE}`
    fi
    if [ "X${LOCKSS_USER}" = X ]
    then
        LOCKSS_USER=lockss
    fi
    export LOCKSS_USER
}

set_variables () {
    OS_TYPE=`uname -s`
    case ${OS_TYPE} in
    SunOS)
        # Next line weird because of evaluation order of
        # ~ and shell parameters
        HOME_DIR=`echo "cd ~$1 ; pwd" | /usr/bin/bash`
        if [ "X${LOCKSS_HOME}" = X ]
        then
            export HOME_DIR
            echo "HOME_DIR ${HOME_DIR}"
            if [ -d /etc/lockss ]
            then
                LOCKSS_HOME=
            else
                LOCKSS_HOME=${HOME_DIR}
            fi
            export LOCKSS_HOME
        fi
        KEEP_GOING=${HOME_DIR}/KeepGoing
        export KEEP_GOING
        if [ "${LOCAL_TXT}X" = "X" ]
        then
            LOCAL_TXT=${HOME_DIR}/local.txt
            export LOCAL_TXT
        fi
        if [ "X${LOCKSS_SSL_CONFIG}" = "X" ]
        then
            LOCKSS_SSL_CONFIG=/var/run/lockss/ssl.${1}.txt
            export LOCKSS_SSL_CONFIG
        fi
        ;;
    Linux)
        export HOME_DIR=`echo "cd ~$1 ; pwd" | bash`
        export LOCKSS_HOME=
        export KEEP_GOING=${HOME_DIR}/KeepGoing
        if [ "${LOCAL_TXT}X" = "X" ]
        then
            export LOCAL_TXT=${HOME_DIR}/local.txt
        fi
        if [ "X${LOCKSS_SSL_CONFIG}" = "X" ]
        then
            export LOCKSS_SSL_CONFIG=/var/run/lockss/ssl.${1}.txt
        fi
        ;;
    esac
    if [ "X${HOME_DIR}" = X ] ; then
        echo "No home directory for $1"
        exit 1
    fi
    if [ "${LOG_DIR}X" = "X" ]
    then
        LOG_DIR="${LOCKSS_HOME}/var/log/$1"
        export LOG_DIR
    fi
    if [ "${LOG_FILE}X" = "X" ]
    then
        LOG_FILE="${LOG_DIR}/stdout"
        export LOG_FILE
    fi
    if [ "${PID_FILE}X" = "X" ]
    then
        PID_FILE="${LOCKSS_HOME}/var/run/$1.pid"
        export PID_FILE
    fi
    if [ "${CFG_FILE}X" = "X" ]
    then
        CFG_FILE=${LOCKSS_HOME}/etc/lockss/config.dat
        export CFG_FILE
    fi
    if [ "${RUN_DIR}X" = "X" ]
    then
        RUN_DIR=${LOCKSS_HOME}/var/run/lockss
        export RUN_DIR
    fi
    CONFIG_SCRIPT=${LOCKSS_HOME}/etc/lockss/hostconfig
    export CONFIG_SCRIPT
}

unset_variables () {
    LOCAL_TXT=
    LOG_DIR=
    LOG_FILE=
    PID_FILE=
    CFG_FILE=
    LOCKSS_USER=
    LOCKSS_HOME=
    KEEP_GOING=
    CONFIG_SCRIPT=
    LOCKSS_SSL_CONFIG=
    RUN_DIR=
}

