#!/bin/sh
# Do not edit the line above. The script must work with
# /bin/sh on Solaris. After any change to this file it must be
# tested on both Linux and Solaris.
if [ "X${LOCKSS_HOME}" != "X" -a -f ${LOCKSS_HOME}/etc/lockss/functions ]
then
    . ${LOCKSS_HOME}/etc/lockss/functions # XXX eliminate LOCKSS_HOME
elif [ -f /etc/lockss/functions ]
then
    . /etc/lockss/functions
elif [ -f ${HOME}/etc/lockss/functions ]
then
    . ${HOME}/etc/lockss/functions
else
    echo "Can't find LOCKSS functions"
    exit 1
fi

MIN_JAVA_HEAP_IN_MB=200
MAX_JAVA_HEAP_IN_MB=1536
DEFAULT_JAVA_HEAP_IN_MB=500
DEFAULT_TEST_GROUP=prod

if [ "X${1}" = Xwait ]; then
    WAIT=Y
    shift
fi

if [ "X${USER}" = X ]; then
    echo "USER not set"
    exit 1
fi
set_lockss_user ${USER}
set_variables ${USER}

DAEMON_COUNT=0
for A in ${LOCKSS_USER}
do
    DAEMON_COUNT=`expr ${DAEMON_COUNT} + 1`
done

if [ -f ${LOCKSS_HOME}/etc/lockss/config.$USER.dat ]; then
    CFG_FILE=${LOCKSS_HOME}/etc/lockss/config.$USER.dat
fi
if [ -f ${CFG_FILE} ]; then
    # CFG_FILE should only set environment variables - avoid executing it
    TMP_CFG_FILE=`mktemp /tmp/CFG_FILE_XXXXXX`
    for KEY in `sed -n 's/^\([A-Z0-9_]*\)=.*$/\1/p' <${CFG_FILE}` ; do
        VALUE=`sed -n -e '/\`/d' -e /${KEY}=/s///p <${CFG_FILE}`
        echo ${KEY}=${VALUE}
    done >${TMP_CFG_FILE}
    . ${TMP_CFG_FILE}
    rm -f ${TMP_CFG_FILE}
else
    echo "${CFG_FILE} missing; run ${CFG_SCRIPT}" >>${LOG_FILE}
    exit 1
fi

# Default is to use  2/3 of physical memory for all daemons combined.
# Set LOCKSS_JAVA_HEAP to override.
set_java_heap

JAVA_VERSION=`${LOCKSS_JAVA_CMD} -version 2>&1 | head -1 | sed -e 's/.* "\(.*\)"/\1/'`
case "X${JAVA_VERSION}" in
X1.[6789]*)
    ;;
*)
    echo "Java version is ${JAVA_VERSION}: 1.6 or higher required" >>${LOG_FILE}
    exit 1
    ;;
esac
CLASSPATH=@CLASSPATH@
DAEMON_CLASS=org.lockss.app.LockssDaemon
if [ "X${LOCKSS_JAVA_SWITCHES}" = "X" ]; then
    LOCKSS_JAVA_SWITCHES="-server -Xmx${LOCKSS_JAVA_HEAP:-500m} -Dsun.net.inetaddr.ttl=3600 -showversion"
fi
# if LOCKSS_PROPS_URL starts with "-" it is assumed to be the of the form
#    -p <url1> [-p <url2> ...]
case "X${LOCKSS_PROPS_URL}" in
X-p*)
    DAEMON_ARGS="${LOCKSS_PROPS_URL} -p ${LOCAL_TXT}"
    ;;
*)
    DAEMON_ARGS="-p ${LOCKSS_PROPS_URL} -p ${LOCAL_TXT}"
    ;;
esac
if [ "X${LOCKSS_SSL_CONFIG}" != "X" -a -s ${LOCKSS_SSL_CONFIG} ]; then
    DAEMON_ARGS="${DAEMON_ARGS} -p ${LOCKSS_SSL_CONFIG}"
fi
if [ "X${LOCKSS_TEST_GROUP}" != "X" ]; then
    DAEMON_ARGS="-g ${LOCKSS_TEST_GROUP} ${DAEMON_ARGS}"
else
    DAEMON_ARGS="-g ${DEFAULT_TEST_GROUP} ${DAEMON_ARGS}"
fi
if [ "X${LOCKSS_EXTERNAL_IPADDR}" != X ]; then
    LOCKSS_V3_IDENTITY="TCP:[${LOCKSS_EXTERNAL_IPADDR}]:${LOCKSS_V3_PORT}"
else
    LOCKSS_V3_IDENTITY="TCP:[${LOCKSS_IPADDR}]:${LOCKSS_V3_PORT}"
fi
#LOCKSS_JAVA_SWITCHES="${LOCKSS_JAVA_SWITCHES} -Dorg.lockss.defaultLogLevel=DEBUG3"
case ${LOCKSS_CLEAR_TMPDIR} in
yes | Yes | YES )
    case "X${LOCKSS_TMPDIR}" in
    X | X/tmp | X/var/tmp )
        # don't clear if unset, or /tmp or /var/tmp
        ;;
    * )
        echo "Clearing ${LOCKSS_TMPDIR}" >> ${LOG_FILE}
        (cd ${LOCKSS_TMPDIR}; rm -rf *) >> ${LOG_FILE} # XXX delete tree from unzip
        ;;
    esac
    ;;
esac
cat >${LOCAL_TXT} <<EOF
org.lockss.platform.localIPAddress=${LOCKSS_IPADDR}
org.lockss.platform.v3.identity=${LOCKSS_V3_IDENTITY}
org.lockss.platform.diskSpacePaths=${LOCKSS_DISK_PATHS}
org.lockss.platform.version=@PLATFORM_VERSION@
org.lockss.platform.sysadminemail=${LOCKSS_EMAIL}
org.lockss.platform.accesssubnet=${LOCKSS_ACCESS_SUBNET}
org.lockss.platform.smtphost=${LOCKSS_MAILHUB}
org.lockss.platform.smtpport=25
org.lockss.platform.tmpDir=${LOCKSS_TMPDIR:-/tmp}
org.lockss.platform.logdirectory=${LOCKSS_HOME}/var/log/${LOCKSS_USER}
org.lockss.platform.logfile=daemon
org.lockss.log.targets=org.lockss.util.FileTarget
org.lockss.platform.fqdn=${LOCKSS_HOSTNAME}
org.lockss.platform.ui.username=${LOCKSS_ADMIN_USER}
org.lockss.platform.ui.password=${LOCKSS_ADMIN_PASSWD}
org.lockss.proxy.port=${LOCKSS_PROXY_PORT}
org.lockss.ui.port=${LOCKSS_UI_PORT}
org.lockss.platform.watchdog.file=${WATCHDOG}
org.lockss.platform.watchdog.interval=${WATCHDOG_SECS}s
org.lockss.platform.propsProxy=${LOCKSS_PROPS_PROXY}
org.lockss.config.serverAuthKeystore=${LOCKSS_PROPS_SERVER_AUTHENTICATE_KEYSTORE}
EOF
cd ${LOCKSS_HOME}
echo "Starting daemon at `date`" >> ${LOG_FILE}
${LOCKSS_JAVA_CMD} ${LOCKSS_JAVA_SWITCHES} -classpath ${CLASSPATH} ${DAEMON_CLASS} ${DAEMON_ARGS} >> "$LOG_FILE" 2>&1 &
echo $! >${PID_FILE}
if [ X${WAIT} != X ]; then
    wait `cat ${PID_FILE}`
fi
# NB - no commands below here
