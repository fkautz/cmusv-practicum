	      Instructions for Configuring and Running LOCKSS

This is a Linux version of the LOCKSS preservation daemon.  The LOCKSS
daemon is usually distributed and used in conjunction with the LOCKSS
platform, a secure, easy-to-administer, appliance-like bootable CD (see
http://www.lockss.org/lockss/Installing_LOCKSS).

The Linux version is functionally the same, but installing and maintaining
the underlying operating system, and periodically upgrading the daemon, is
the responsibility of the user.  The security and trustworthiness of LOCKSS
on Linux depends on the security of the underlying Linux platform.

Prerequisites:
- Public (routable) IP address
- Java 1.6.

Java:
The daemon works on CentOS 5.3 using the Sun JRE, and on CentOS 5.4 using
the java-1.6.0-openjdk package.

Configuration:
After installing the RPM, run /etc/locks/hostconfig as root.  You will be
asked for the following information.  Most values will default to reasonable
guesses, or to their previous value if hostconfig has previously been run.
hostconfig should also be run after upgrading to a new version of the LOCKSS
daemon, as new configuration variables are occasionally added.

- Fully qualified hostname (FQDN) of this machine.

- IP address of this machine.

- If the machine is on a private network (behind NAT) you will need the
    external IP address of the NAT router, and will need to forward at
    least one port from the NAT router to the LOCKSS machine.  See
    http://www.lockss.org/lockss/NAT

- Initial subnet for admin UI access.
    The subnet (in CIDR or X.Y.Z.* notation) that will initially be
    granted access to the web-based administrative UI.  The local host is
    implicitly allowed.

- LCAP V3 protocol port.
    The TCP port at which this daemon will receive polling messages from
    peers.

- Mail relay for this machine
    If the machine is configured to handle mail, "localhost" should work.
    Otherwise, should be an SMTP relay that will accept and relay mail
    from this machine.  Will also prompt for username/passwd if required.

- E-mail address for administrator
    Occasional alerts may be sent to this address.

- Path to java
    Full path to java executable.

- Java switches
    Normally blank.  If set, replaces the built-in switches (see
    /etc/lockss/rundaemon).

- Configuration URL
    The URL (or local file name) from which the LOCKSS daemon will load
    extended configuration and tuning parameters.  Use the default value to
    participate in the public LOCKSS preservation community.  Use a private
    config file to create your own preservation community.  May also be a
    string of the form "-p <url1> -p <url2> ..."  to load multiple config
    files.

- Preservation group(s)
    Used to select group-specific options in the config file.  Use the
    default value to participate in the public LOCKSS preservation
    community.  Multiple groups may be entered, separated by semicolon.

- Content storage directories
    The full path of the directory under which LOCKSS will store
    configuration and preserved content.  (Or a semicolon-separated list of
    paths, if you have multiple disks/mount points.)  The directory must be
    writable by the lockss user.  The script will attempt to create such a
    directory if necessary, but it won't handle all cases.  (E.g., parent
    dirs that aren't searchable (execute permission) by lockss.)

- Temporary storage directory
    In production use, LOCKSS may require a substantial amount space for
    temporary files, especially if the preserved files are large.  /tmp or
    /var/tmp may not be large enough.  The default is to create a tmp
    directory below the first content storage directory.

- User name for web UI administration
- Password for web UI administration user admin

The script will then echo the values and ask for confirmation, store the
configuration and create any necessary directories.

The LOCKSS daemon can be started by running "/etc/init.d/lockss start".
To have the daemon start automatically at boot time run
  /sbin/chkconfig -add lockss
as root.  This only needs to be done once, after the initial install.

To further administer the daemon, go to http://<hostname>:8081/ (or other
port, if not using the standard daemon configuration).
